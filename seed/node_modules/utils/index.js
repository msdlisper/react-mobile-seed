/**
 * @file --
 * @author zhangpeng
 */

const colors = require('colors');
const path = require('path');
const fs = require('fs');

const utils = {
    /**
     * 打印
     * @param  {string/array} param 如果是数组, 用法["type:message","type:message"]
     */
    logs(param) {
        const consoleTypeMessage = function (typeMsg) {
            const arr = typeMsg.split(':') || ['', typeMsg];
            const type = arr.shift();
            const msg = arr.join(':');
            switch (type) {
                case 'error':
                    console.error('[ ERROR ] '.red, msg);
                    break;
                case 'info':
                    console.error('[ INFO ] '.green, msg);
                    break;
                case 'warn':
                    console.error('[ WARNING ] '.yellow, msg);
                    break;
                case 'debug':
                    console.error('[ DEBUG ] '.cyan, msg);
                    break;
                default : 
                    console.log(typeMsg)
            }

        }
        if (typeof param === 'string') {
            consoleTypeMessage(param);
        } else if (Array.isArray(param)) {
            param.map(function (p, index) {
                consoleTypeMessage(p);
            });
        }
    },
    ensurePath(p) {
        if (!fs.existsSync(p)) {
            utils.ensurePath(path.dirname(p));
            fs.mkdirSync(p);
        }
    },
    isExist(p) {
        return !!fs.existsSync(p);
    },
    replaceTemplate(content = '', options = {}) {
        const keyReg = /@\{(\w+)\}@/g;
        let resultContent = content.replace(keyReg, function (match, key) {
            if (key in options) {
                return options[key];
            }
        });
        return resultContent;
    },
    getBuildTime() {
        let now = new Date();
        return '' + now.getFullYear() + (now.getMonth() + 1) + now.getDate() + now.getHours() + now.getMinutes();
    }
};

module.exports = utils;